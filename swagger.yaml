openapi: 3.0.0
info:
  title: Hadrumet Passport Backend API
  version: 1.0.0
  description: API documentation for Hadrumet Passport Backend
servers:
  - url: http://localhost:3000
paths:
  /api/auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized
  /api/auth/me:
    get:
      summary: Get current user info
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User info
        '404':
          description: User not found
  /api/contacts:
    get:
      summary: Get all contacts
      responses:
        '200':
          description: List of contacts
    post:
      summary: Create a new contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Contact created
  /api/contacts/{id}:
    get:
      summary: Get contact by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contact found
        '404':
          description: Contact not found
    put:
      summary: Update contact by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Contact updated
        '404':
          description: Contact not found
    delete:
      summary: Delete contact by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contact deleted
        '404':
          description: Contact not found
  /api/event:
    get:
      summary: Get all events
      responses:
        '200':
          description: List of events
    post:
      summary: Create a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Event created
  /api/event/{id}:
    get:
      summary: Get event by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Event found
        '404':
          description: Event not found
    put:
      summary: Update event by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Event updated
        '404':
          description: Event not found
    delete:
      summary: Delete event by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Event deleted
        '404':
          description: Event not found
  /api/places:
    get:
      summary: Get all places
      responses:
        '200':
          description: List of places
    post:
      summary: Create a new place
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Place created
  /api/places/{id}:
    get:
      summary: Get place by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Place found
        '404':
          description: Place not found
    put:
      summary: Update place by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Place updated
        '404':
          description: Place not found
    delete:
      summary: Delete place by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Place deleted
        '404':
          description: Place not found
  /api/sendEmail:
    post:
      summary: Send an email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Email sent
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
